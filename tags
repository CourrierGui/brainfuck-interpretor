!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
BFInterpretor	bf-interpretor.hpp	/^    BFInterpretor(const std::string& input_file)$/;"	f	class:BFInterpretor
BFInterpretor	bf-interpretor.hpp	/^class BFInterpretor {$/;"	c
InvalidSyntax	bf-interpretor.hpp	/^struct InvalidSyntax {$/;"	s
Parser	bf-interpretor.hpp	/^    Parser(const std::string& input_file) {$/;"	f	class:Parser
Parser	bf-interpretor.hpp	/^class Parser {$/;"	c
c	bf-interpretor.hpp	/^  char c;$/;"	m	struct:InvalidSyntax
get_instructions	bf-interpretor.hpp	/^    std::vector<char> get_instructions() {$/;"	f	class:Parser
log	bf-interpretor.hpp	/^    bool log;$/;"	m	class:BFInterpretor
m_inst	bf-interpretor.hpp	/^    instruction_type m_inst;$/;"	m	class:BFInterpretor
m_inst	bf-interpretor.hpp	/^    std::vector<char> m_inst;$/;"	m	class:Parser
m_inst_ptr	bf-interpretor.hpp	/^    instruction_type::iterator m_inst_ptr;$/;"	m	class:BFInterpretor
m_ptr	bf-interpretor.hpp	/^    buffer_type::iterator m_ptr;$/;"	m	class:BFInterpretor
main	main.cpp	/^int main(int argc, char** argv) {$/;"	f
next_match	bf-interpretor.hpp	/^    void next_match() {$/;"	f	class:BFInterpretor
previous_match	bf-interpretor.hpp	/^    void previous_match() {$/;"	f	class:BFInterpretor
start	bf-interpretor.hpp	/^    void start() {$/;"	f	class:BFInterpretor
step	bf-interpretor.hpp	/^    void step(const char c) {$/;"	f	class:BFInterpretor
